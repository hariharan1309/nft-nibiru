import React, { useEffect, useState } from 'react';
import dynamic from 'next/dynamic';

const Graph: React.FC = () => {
  const [chartOptions, setChartOptions] = useState({});

  useEffect(() => {
    const options = {
      chart: {
        height: '100%',
        width: '100%',
        type: 'area',
        fontFamily: 'Inter, sans-serif',
        dropShadow: {
          enabled: true,
        },
        toolbar: {
          show: false,
        },
      },
      tooltip: {
        enabled: false,
        x: {
          show: true,
          format: 'dd MMM',
        },
        y: {
          formatter: (val: any) => `$${val.toLocaleString()}`,
        },
      },
      stroke: {
        width: 1.5,
        curve: 'smooth',
      },
      grid: {
        show: true,
        strokeDashArray: 2,
        padding: {
          left: 2,
          right: 2,
          top: 2,
        },
      },
      legend: {
        show: false,
        position: 'top',
        horizontalAlign: 'left',
        fontSize: '14px',
        fontFamily: 'Inter, sans-serif',
        cssClass: 'text-sm px-1 font-normal fill-gray-500 dark:fill-gray-400',
        markers: {
          width: 12,
          height: 12,
          radius: 4,
        },
      },
      xaxis: {
        labels: {
          show: false,
          style: {
            fontFamily: 'Inter, sans-serif',
            cssClass: 'text-xs font-normal fill-gray-500 dark:fill-gray-400',
          },
        },
        axisBorder: {
          show: false,
        },
        axisTicks: {
          show: false,
        },
      },
      yaxis: {
        show: true,
        labels: {
          formatter: (val: string) => `$${val}`,
          style: {
            fontFamily: 'Inter, sans-serif',
            cssClass: 'text-xs font-normal fill-gray-500 dark:fill-gray-400',
          },
        },
        axisBorder: {
          show: false,
        },
        axisTicks: {
          show: false,
        },
      },
    };

    setChartOptions(options);
    // setChartSeries(series);
  }, []);
  const series = [
    {
      name: 'New-List',
      data:[344491, 344491, 344491, 344491, 344491, 344491, 358870, 358870, 358870, 358870, 358870, 358870, 358870, 358870, 358870, 358870, 358870, 358870, 358870, 358870, 358870, 358870, 358870, 358870, 358870, 358870, 358870, 358870, 358870, 358870, 358870, 358870, 358870, 358870, 358870, 358870, 358870, 360151, 360151, 360151, 360151, 360151, 360151, 360151, 360151, 360151, 360151, 360151, 360151, 360151, 360151, 360151, 360151, 360151, 360151, 360151, 360151, 360151, 360151, 360151, 360151, 360151, 360151, 360151, 360151, 360151, 360151, 360151, 354092, 354092, 354092, 354092, 354092, 354092, 354092, 354092, 354092, 354092, 354092, 354092, 354092, 354092, 354092, 354092, 354092, 354092, 354092, 354092, 354092, 354092, 354092, 354092, 354092, 354092, 354092, 354092, 354092, 354092, 337619, 337619, 337619, 337619, 337619, 337619, 337619, 337619, 337619, 337619, 337619, 337619, 337619, 337619, 337619, 337619, 337619, 337619, 337619, 337619, 337619, 337619, 337619, 337619, 337619, 337619, 337619, 337619, 337619, 337619, 337619, 329654, 329654, 329654, 329654, 329654, 329654, 329654, 329654, 329654, 329654, 329654, 329654, 329654, 329654, 329654, 329654, 329654, 329654, 329654, 329654, 329654, 329654, 329654, 329654, 329654, 329654, 329654, 329654, 329654, 329654, 295837, 295837, 295837, 295837, 295837, 295837, 295837, 295837, 295837, 295837, 295837, 295837, 295837, 295837, 295837, 295837, 295837, 295837, 295837, 295837, 295837, 295837, 295837, 295837, 295837, 295837, 295837, 295837, 295837, 295837, 295837, 244495, 244495, 244495, 244495, 244495, 244495, 244495, 244495, 244495, 244495, 244495, 244495, 244495, 244495, 244495, 244495, 244495, 244495, 244495, 244495, 244495, 244495, 244495, 244495, 244495, 244495, 244495, 244495, 244495, 244495, 244495, 223407, 223407, 223407, 223407, 223407, 223407, 223407, 223407, 223407, 223407, 223407, 223407, 223407, 223407, 223407, 223407, 223407, 223407, 223407, 223407, 223407, 223407, 223407, 223407, 223407, 223407, 223407, 223407, 223407, 240500, 240500, 240500, 240500, 240500, 240500, 240500, 240500, 240500, 240500, 240500, 240500, 240500, 240500, 240500, 240500, 240500, 240500, 240500, 240500, 240500, 240500, 240500, 240500, 240500, 240500, 240500, 240500, 240500, 240500, 240500, 298124, 298124, 298124, 298124, 298124, 298124, 298124, 298124, 298124, 298124, 298124, 298124, 298124, 298124, 298124, 298124, 298124, 298124, 298124, 298124, 298124, 298124, 298124, 298124, 298124, 298124, 298124, 298124, 298124, 298124, 343145, 343145, 343145, 343145, 343145, 343145, 343145, 343145, 343145, 343145, 343145, 343145, 343145, 343145, 343145, 343145, 343145, 343145, 343145, 343145, 343145, 343145, 343145, 343145, 343145, 343145, 343145, 343145, 343145, 343145, 343145, 381356, 381356, 381356, 381356, 381356, 381356, 381356, 381356, 381356, 381356, 381356, 381356, 381356, 381356, 381356, 381356, 381356, 381356, 381356, 381356, 381356, 381356, 381356, 381356, 381356]
      
    },
  ];
  const ReactApexChart = dynamic(() => import('react-apexcharts'), { ssr: false });

  return (
    <div className="w-full flex flex-1 items-center justify-center gap-5 flex-col bg-gray-50 ring-1 ring-gray-200 rounded-lg shadow-md dark:bg-gray-800 p-3 md:p-5">
      <div className="flex justify-between mb-5">
        <h5 className="text-xl font-semibold leading-none text-gray-800 dark:text-white pe-1">Sales Analysis</h5>
      </div>
      {typeof window !== 'undefined' && (
        <ReactApexChart
            options={chartOptions}
            series={series}
            type="line"
            height={300}
            width={400}
            />
      )}
    </div>
  );
};

export default Graph;